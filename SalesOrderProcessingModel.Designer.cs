//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SalesOrderProcessing", "FK_SalesOrders_Customers", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SalesOrderProcessing.Customer), "SalesOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SalesOrderProcessing.SalesOrder), true)]
[assembly: EdmRelationshipAttribute("SalesOrderProcessing", "FK_SalesOrderLines_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SalesOrderProcessing.Product), "SalesOrderLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SalesOrderProcessing.SalesOrderLine), true)]
[assembly: EdmRelationshipAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrders", "SalesOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SalesOrderProcessing.SalesOrder), "SalesOrderLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SalesOrderProcessing.SalesOrderLine), true)]
[assembly: EdmRelationshipAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrderStatus", "SalesOrderLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SalesOrderProcessing.SalesOrderLine), "SalesOrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SalesOrderProcessing.SalesOrderStatus), true)]

#endregion

namespace SalesOrderProcessing
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SalesOrderProcessingObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SalesOrderProcessingObjectContext object using the connection string found in the 'SalesOrderProcessingObjectContext' section of the application configuration file.
        /// </summary>
        public SalesOrderProcessingObjectContext() : base("name=SalesOrderProcessingObjectContext", "SalesOrderProcessingObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SalesOrderProcessingObjectContext object.
        /// </summary>
        public SalesOrderProcessingObjectContext(string connectionString) : base(connectionString, "SalesOrderProcessingObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SalesOrderProcessingObjectContext object.
        /// </summary>
        public SalesOrderProcessingObjectContext(EntityConnection connection) : base(connection, "SalesOrderProcessingObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrder> SalesOrder
        {
            get
            {
                if ((_SalesOrder == null))
                {
                    _SalesOrder = base.CreateObjectSet<SalesOrder>("SalesOrder");
                }
                return _SalesOrder;
            }
        }
        private ObjectSet<SalesOrder> _SalesOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrderLine> SalesOrderLine
        {
            get
            {
                if ((_SalesOrderLine == null))
                {
                    _SalesOrderLine = base.CreateObjectSet<SalesOrderLine>("SalesOrderLine");
                }
                return _SalesOrderLine;
            }
        }
        private ObjectSet<SalesOrderLine> _SalesOrderLine;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrderStatus> SalesOrderStatus
        {
            get
            {
                if ((_SalesOrderStatus == null))
                {
                    _SalesOrderStatus = base.CreateObjectSet<SalesOrderStatus>("SalesOrderStatus");
                }
                return _SalesOrderStatus;
            }
        }
        private ObjectSet<SalesOrderStatus> _SalesOrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrder(SalesOrder salesOrder)
        {
            base.AddObject("SalesOrder", salesOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrderLine EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrderLine(SalesOrderLine salesOrderLine)
        {
            base.AddObject("SalesOrderLine", salesOrderLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrderStatus(SalesOrderStatus salesOrderStatus)
        {
            base.AddObject("SalesOrderStatus", salesOrderStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="city">Initial value of the city property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String name, global::System.String address, global::System.String city)
        {
            Customer customer = new Customer();
            customer.id = id;
            customer.name = name;
            customer.address = address;
            customer.city = city;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrders_Customers", "SalesOrder")]
        public EntityCollection<SalesOrder> SalesOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOrder>("SalesOrderProcessing.FK_SalesOrders_Customers", "SalesOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOrder>("SalesOrderProcessing.FK_SalesOrders_Customers", "SalesOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="cost">Initial value of the cost property.</param>
        /// <param name="salesPrice">Initial value of the salesPrice property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String description, global::System.Double cost, global::System.Double salesPrice)
        {
            Product product = new Product();
            product.id = id;
            product.description = description;
            product.cost = cost;
            product.salesPrice = salesPrice;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double cost
        {
            get
            {
                return _cost;
            }
            set
            {
                OncostChanging(value);
                ReportPropertyChanging("cost");
                _cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cost");
                OncostChanged();
            }
        }
        private global::System.Double _cost;
        partial void OncostChanging(global::System.Double value);
        partial void OncostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double salesPrice
        {
            get
            {
                return _salesPrice;
            }
            set
            {
                OnsalesPriceChanging(value);
                ReportPropertyChanging("salesPrice");
                _salesPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salesPrice");
                OnsalesPriceChanged();
            }
        }
        private global::System.Double _salesPrice;
        partial void OnsalesPriceChanging(global::System.Double value);
        partial void OnsalesPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_Products", "SalesOrderLine")]
        public EntityCollection<SalesOrderLine> SalesOrderLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_Products", "SalesOrderLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_Products", "SalesOrderLine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="SalesOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="customerId">Initial value of the customerId property.</param>
        /// <param name="salesOrderDate">Initial value of the salesOrderDate property.</param>
        public static SalesOrder CreateSalesOrder(global::System.Int32 id, global::System.Int32 customerId, global::System.DateTime salesOrderDate)
        {
            SalesOrder salesOrder = new SalesOrder();
            salesOrder.id = id;
            salesOrder.customerId = customerId;
            salesOrder.salesOrderDate = salesOrderDate;
            return salesOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 customerId
        {
            get
            {
                return _customerId;
            }
            set
            {
                OncustomerIdChanging(value);
                ReportPropertyChanging("customerId");
                _customerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("customerId");
                OncustomerIdChanged();
            }
        }
        private global::System.Int32 _customerId;
        partial void OncustomerIdChanging(global::System.Int32 value);
        partial void OncustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime salesOrderDate
        {
            get
            {
                return _salesOrderDate;
            }
            set
            {
                OnsalesOrderDateChanging(value);
                ReportPropertyChanging("salesOrderDate");
                _salesOrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salesOrderDate");
                OnsalesOrderDateChanged();
            }
        }
        private global::System.DateTime _salesOrderDate;
        partial void OnsalesOrderDateChanging(global::System.DateTime value);
        partial void OnsalesOrderDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrders_Customers", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SalesOrderProcessing.FK_SalesOrders_Customers", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SalesOrderProcessing.FK_SalesOrders_Customers", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("SalesOrderProcessing.FK_SalesOrders_Customers", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("SalesOrderProcessing.FK_SalesOrders_Customers", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrders", "SalesOrderLine")]
        public EntityCollection<SalesOrderLine> SalesOrderLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrderLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrderLine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="SalesOrderLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrderLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrderLine object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="salesOrderId">Initial value of the salesOrderId property.</param>
        /// <param name="productId">Initial value of the productId property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="salesPrice">Initial value of the salesPrice property.</param>
        /// <param name="amount">Initial value of the amount property.</param>
        /// <param name="statusId">Initial value of the statusId property.</param>
        public static SalesOrderLine CreateSalesOrderLine(global::System.Int32 id, global::System.Int32 salesOrderId, global::System.Int32 productId, global::System.Int32 quantity, global::System.Double salesPrice, global::System.Double amount, global::System.Int32 statusId)
        {
            SalesOrderLine salesOrderLine = new SalesOrderLine();
            salesOrderLine.id = id;
            salesOrderLine.salesOrderId = salesOrderId;
            salesOrderLine.productId = productId;
            salesOrderLine.quantity = quantity;
            salesOrderLine.salesPrice = salesPrice;
            salesOrderLine.amount = amount;
            salesOrderLine.statusId = statusId;
            return salesOrderLine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 salesOrderId
        {
            get
            {
                return _salesOrderId;
            }
            set
            {
                OnsalesOrderIdChanging(value);
                ReportPropertyChanging("salesOrderId");
                _salesOrderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salesOrderId");
                OnsalesOrderIdChanged();
            }
        }
        private global::System.Int32 _salesOrderId;
        partial void OnsalesOrderIdChanging(global::System.Int32 value);
        partial void OnsalesOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 productId
        {
            get
            {
                return _productId;
            }
            set
            {
                OnproductIdChanging(value);
                ReportPropertyChanging("productId");
                _productId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("productId");
                OnproductIdChanged();
            }
        }
        private global::System.Int32 _productId;
        partial void OnproductIdChanging(global::System.Int32 value);
        partial void OnproductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Int32 _quantity;
        partial void OnquantityChanging(global::System.Int32 value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double salesPrice
        {
            get
            {
                return _salesPrice;
            }
            set
            {
                OnsalesPriceChanging(value);
                ReportPropertyChanging("salesPrice");
                _salesPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salesPrice");
                OnsalesPriceChanged();
            }
        }
        private global::System.Double _salesPrice;
        partial void OnsalesPriceChanging(global::System.Double value);
        partial void OnsalesPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.Double _amount;
        partial void OnamountChanging(global::System.Double value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 statusId
        {
            get
            {
                return _statusId;
            }
            set
            {
                OnstatusIdChanging(value);
                ReportPropertyChanging("statusId");
                _statusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statusId");
                OnstatusIdChanged();
            }
        }
        private global::System.Int32 _statusId;
        partial void OnstatusIdChanging(global::System.Int32 value);
        partial void OnstatusIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SalesOrderProcessing.FK_SalesOrderLines_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SalesOrderProcessing.FK_SalesOrderLines_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("SalesOrderProcessing.FK_SalesOrderLines_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("SalesOrderProcessing.FK_SalesOrderLines_Products", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrders", "SalesOrder")]
        public SalesOrder SalesOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesOrder> SalesOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesOrder>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrders", "SalesOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrderStatus", "SalesOrderStatus")]
        public SalesOrderStatus SalesOrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrderStatus>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrderStatus>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesOrderStatus> SalesOrderStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrderStatus>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesOrderStatus>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="SalesOrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrderStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrderStatus object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static SalesOrderStatus CreateSalesOrderStatus(global::System.Int32 id, global::System.String description)
        {
            SalesOrderStatus salesOrderStatus = new SalesOrderStatus();
            salesOrderStatus.id = id;
            salesOrderStatus.description = description;
            return salesOrderStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SalesOrderProcessing", "FK_SalesOrderLines_SalesOrderStatus", "SalesOrderLine")]
        public EntityCollection<SalesOrderLine> SalesOrderLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOrderLine>("SalesOrderProcessing.FK_SalesOrderLines_SalesOrderStatus", "SalesOrderLine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SalesOrderProcessing", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                if (_principal_id != value)
                {
                    Onprincipal_idChanging(value);
                    ReportPropertyChanging("principal_id");
                    _principal_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("principal_id");
                    Onprincipal_idChanged();
                }
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }

    #endregion
    
}
