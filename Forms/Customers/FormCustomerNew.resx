<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="ButtonSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>